---
- name: Install basic packages
  yum: name={{ item }} state=present
  with_items:
    - sudo
    - python-psycopg2

- name: Do not require tty for root user
  copy: src=sudoers_root dest=/etc/sudoers.d/00_root owner=root group=root mode=0440

- name: Permit postgres user to start postgresql service with systemctl
  copy: src=sudoers_postgres dest=/etc/sudoers.d/01_postgres owner=root group=root mode=0440

- name: Create directory for download
  file: path={{ postgresql_download_dir }} state=directory

- name: Download PostgreSQL yum repository rpm
  get_url: url={{ postgresql_repo_rpm_url }} dest={{ postgresql_repo_rpm_path }}

- name: Install PostgreSQL yum repository rpm
  yum: name={{ postgresql_repo_rpm_path }} state=present

- name: Install PostgreSQL rpm
  yum: name={{ item }} state=present
  with_items:
    - postgresql{{ postgresql_major_minor_version }}-server
    - postgresql{{ postgresql_major_minor_version }}-contrib

- name: Get postgres home directory
  shell: "getent passwd postgres | awk -F : '{print $6}'"
  register: postgresql_postgres_home_dir_result
  changed_when: false
  check_mode: no

- name: Set postgres home directory as fact
  set_fact:
    postgresql_postgres_home_dir: "{{ postgresql_postgres_home_dir_result.stdout }}"

- name: Set postgres directories as facts
  set_fact:
    postgresql_data_dir: "{{ postgresql_postgres_home_dir }}/{{ postgresql_major_dot_minor_version }}/data"
    postgresql_archive_dir: "{{ postgresql_postgres_home_dir }}/{{ postgresql_major_dot_minor_version }}/archive"
    postgresql_backup_dir: "{{ postgresql_postgres_home_dir }}/{{ postgresql_major_dot_minor_version }}/backups"

- name: Create PostgreSQL database directories
  file: path={{ item }} state=directory owner=postgres group=postgres mode=0700
  with_items:
    - "{{ postgresql_data_dir }}"
    - "{{ postgresql_archive_dir }}"
    - "{{ postgresql_backup_dir }}"

- include: ssh_to_peer.yml

- name: Create .pgpass file to be used for pg_basebackup non-interactivelly
  blockinfile:
    dest: "{{ postgresql_postgres_home_dir }}/.pgpass"
    create: true
    backup: true
    mode: 0600
    state: present
    block: |
      *:*:*:{{ postgresql_replication_user }}:{{ postgresql_replication_password | regex_replace('([:\\\\])', '\\\\\\1') }}
      *:*:*:postgres:{{ postgresql_postgres_password | regex_replace('([:\\\\])', '\\\\\\1') }}
  # NOTE: Use become_user here so that backup file is created with that user
  become: true
  become_user: postgres
