#!/bin/sh
# pgpool_failover
#
# This script path and argument must be set in the failover_command
# config in pgpool.conf
#
# NOTE: Please refer the following documents about failover.
#   - http://www.pgpool.net/docs/latest/pgpool-ja.html#failover_in_stream_mode
#   - http://www.pgpool.net/pgpool-web/contrib_docs/pgpool-II-internal-1.pdf
#
# This script is executed on the primary or standby server by the root user.
set -eu
echo start args=$* UID=$UID | logger -t pgpool_failover

failed_node=$1       # %d = node id
old_primary_node=$2  # %P = old primary node id
new_master=$3        # %H = hostname of the new master node
new_pgdata=$4        # %R = new master database cluster path

if [ $failed_node != $old_primary_node ]; then
    echo do nothing since failed node was not primary | logger -t pgpool_failover
    exit 0;
fi

ssh_cmd="/bin/ssh -T postgres@$new_master"
if [ $UID -eq 0 ]; then
  ssh_cmd="/bin/sudo -u postgres $ssh_cmd"
fi

$ssh_cmd "
sed -i -e 's/^hot_standby *= *on/hot_standby = off/' $new_pgdata/postgresql.conf
"
echo disnabled hot_standby in postgresql.conf. | logger -t pgpool_failover

$ssh_cmd /bin/touch $new_pgdata/{{ pgpool2_promote_trigger_filename }}
echo created {{ pgpool2_promote_trigger_filename }} file | logger -t pgpool_failover
